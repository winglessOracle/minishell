/* Working correctly */

hello world 'does | this work?' hello=10 $PWD word | word "#comment not gone" | with $PS1 and #comment that will be gone 
| followed by command
|
command | another $command |
#comment
< input for command 1 | << here for heredoc > out | >> append the last
< $var 
< "$var" 
< '$var' 
<< $var
<< "$var" 
<< '$var'
< "input with var $PS1" for command 1 | << "here with var $PWD" for heredoc > out | >> append the last
< "in" > "out"
$PWDtest
test$PWD
~withnoslash
~
~/hello

/* Segfaults or incorrect behaviour */
------------------------
cd . 											->uses cdpath should use current dir
cd -											-> should print new dir
"  \"hoi\" "  \"hoi\"  xx'd  x  \" dag kaas 	-> removes single quote
 'hello "there world'                       	-> removes double quote

/ *test cases to compare with bash: */
---------------------------------------
<< here cat > out | < out cat
echo "$var en aap"
here

--

mkdir test
cd test
rmdir ../test
$PWD

--

/* check Carien */
var name can be folowed by '\0' as well as '='
think about here content
should none existing var be NULL or ""? Now NULL but this wil stop the cmd execution at that point?
NULL should be skipped in cmd vector? --> echo $var -n aap
make bash script for testing?
check "expr $? + $?"
use PS1 for testing as it has wierd characters...

/* checks Carlo */
env should only include env variables with correct export status?
readline keeps first characters
redirect can have empty filenames or should expander flag error?
ctrl-C should display a new line with a new prompt (check that previous text does not get executed)
ctrl-D in prompt with text should do nothing.
ctrl-/ does nothing
try ctrls with blocking command (eg cat with no arguments) (ctrl-C prints ^C on a new line and exits child, 
ctrl-D exits child and prints nothing, ctrl-/ does nothing)
PATH directories should be checked from left to right.