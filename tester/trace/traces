

		Running ...pipe_tests

		Running ...env_tests

		Running ...exp_tests3c3
< Exit code: 0
---
> Exit code: 2


		Running ...quote_tests3c3
< Exit code: 0
---
> Exit code: 2


		Running ...built_in_tests3c3
< Exit code: 0
---
> Exit code: 139
3c3
< /
---
> /Users/cariencaljouw/Documents/codamcore/minishell
3c3
< Exit code: 1
---
> Exit code: 0
3d2
< hello world -n
3,4c3,4
< SHELL=/bin/zsh
< USER_ZDOTDIR=/Users/cariencaljouw
---
> MANPATH=/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/homebrew/share/man:
> TERM_PROGRAM=vscode
3,4c3,4
< SHELL=/bin/zsh
< USER_ZDOTDIR=/Users/cariencaljouw
---
> MANPATH=/opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/homebrew/share/man:
> TERM_PROGRAM=vscode
3c3
< Exit code: 0
---
> Exit code: 2


		Running ...assign_tests

		Running ...redirect_tests

		Running ...here_doc_tests

		Running ...cond_pipe_tests3,4c3
< 1
< Exit code: 0
---
> Exit code: 2
3,5c3
< 1
< 2
< Exit code: 0
---
> Exit code: 2
3,6c3
< 1
< 2
< 3
< Exit code: 0
---
> Exit code: 2
3,7c3
< 1
< 2
< 3
< 4
< Exit code: 0
---
> Exit code: 127
3,6c3
< 1
< 3
< 4
< Exit code: 0
---
> Exit code: 2
3,4c3
< 1
< Exit code: 0
---
> Exit code: 2
3,6c3
< 1
< 1
< 2
< Exit code: 0
---
> Exit code: 2
3,4c3
< 1
< Exit code: 0
---
> Exit code: 2
3,10c3
< 1
< 2
< 3
< 1
< 2
< 3
< 4
< Exit code: 0
---
> Exit code: 2
3,8c3
< 1
< 2
< 3
< 3
< 4
< Exit code: 0
---
> Exit code: 2
3,7c3
< 1
< 3
< 4
< 1
< Exit code: 0
---
> Exit code: 2
3,6c3
< 1
< 3
< 4
< Exit code: 0
---
> Exit code: 2
3,7c3
< 1
< 2
< 3
< 4
< Exit code: 0
---
> Exit code: 2
3,6c3
< 1
< 3
< 4
< Exit code: 0
---
> Exit code: 2
3,4c3
< 2
< Exit code: 0
---
> Exit code: 2
3,4c3
< 3
< Exit code: 0
---
> Exit code: 2
3c3
< Exit code: 127
---
> Exit code: 2
3,6c3
< 2
< 3
< 4
< Exit code: 0
---
> Exit code: 2
3,4c3
< 2
< Exit code: 0
---
> Exit code: 2
3,6c3
< 2
< 1
< 2
< Exit code: 0
---
> Exit code: 2
3,4c3
< 2
< Exit code: 0
---
> Exit code: 2
3c3
< Exit code: 127
---
> Exit code: 2
3,7c3
< 1
< 2
< 3
< 4
< Exit code: 0
---
> Exit code: 2
3,7c3
< 2
< 3
< 4
< 1
< Exit code: 0
---
> Exit code: 2
3,6c3
< 2
< 3
< 4
< Exit code: 0
---
> Exit code: 2
3,6c3
< 2
< 3
< 4
< Exit code: 0
---
> Exit code: 2
3,6c3
< 2
< 3
< 4
< Exit code: 0
---
> Exit code: 2


		Running ...wildcard_tests3c3
< 0 1 2 Makefile README.md builtin en.subject.pdf include input.txt libft log minishell obj obj_buitin segfault.txt src tester
---
> *
3c3
< Makefile
---
> *ke*
3,72c3
< # **************************************************************************** #
< #                                                                              #
< #                                                         ::::::::             #
< #    Makefile                                           :+:    :+:             #
< #                                                      +:+                     #
< #    By: carlo <carlo@student.42.fr>                  +#+                      #
< #                                                    +#+                       #
< #    Created: 2022/10/10 09:28:26 by cwesseli      #+#    #+#                  #
< #    Updated: 2023/04/25 12:33:20 by cariencaljo   ########   odam.nl          #
< #                                                                              #
< # **************************************************************************** #
< #//= Colors =//#
< BOLD	:= [1m
< GREEN	:= [32;1m
< BLUE	:= [34;1m
< RESET	:= [0m
< #//= Variables = //#
< NAME		 = minishell
< NAME_BONUS	 = minishell_bonus
< CC			 = clang
< CFLAGS		 = -Wall -Wextra -Werror
< ifeq ($(USER), cariencaljouw)
< 	RL_INC			= /opt/homebrew/opt/readline/include
< 	RL_LIB			= /opt/homebrew/opt/readline/lib
< else
< 	RL_INC		= /Users/$(USER)/.brew/opt/readline/include
< 	RL_LIB		= /Users/$(USER)/.brew/opt/readline/lib
< endif
< #//= Locations =//#
< INCLUDE		= ./include
< LIBFT		= ./libft
< LIBS		= $(LIBFT)/libft.a -L$(RL_LIB)
< HEADERS		= -I $(LIBFT) -I$(INCLUDE) -I$(RL_INC)
< OBJ_FILES	= $(addprefix obj/, minishell.o lst_utils/t_node.o parser.o utils/utils.o lst_utils/t_smpl_cmd.o \
< 				lexer.o utils/env_utils.o init.o print.o lst_utils/node.o utils/parser_utils.o \
< 				utils/redirect_utils.o utils/quote_utils.o expander.o signals.o termios.o \
< 				lst_utils/delete.o executor.o utils/executor_utils.o utils/wildcards.o cond_pipe.o \
< 				utils/cond_pipe_utils.o utils/check_syntax_utils.o lst_utils/t_pipe.o)
< OBJ_BUILTIN = $(addprefix obj_buitin/, echo.o cd.o cd_utils.o pwd.o unset.o export.o env.o exit.o)
< #//= Modifiable =//#
< all: libft $(NAME)
< 	
< $(NAME): libft $(OBJ_FILES) $(OBJ_BUILTIN)
< 	@$(CC) $(OBJ_FILES) $(OBJ_BUILTIN) $(LIBS) $(HEADERS) -o $(NAME) $(CFLAGS) -lreadline
< bonus: CFLAGS = -Wall -Wextra -Werror -DBONUS=1
< bonus: fclean all	
< libft:
< 	@$(MAKE) -C $(LIBFT)
< $(OBJ_FILES): obj/: src/ 
< 	@mkdir -p $(dir $@)
< 	@echo "$(GREEN)$(BOLD)Compiling minishell:$(RESET) $(notdir $<)"
< 	@$(CC) -c $(CFLAGS) $(HEADERS) -o $@ $< 
< $(OBJ_BUILTIN): obj_buitin/: builtin/ 
< 	@mkdir -p $(dir $@)
< 	@echo "$(GREEN)$(BOLD)Compiling minishell builtins:$(RESET) $(notdir $<)"
< 	@$(CC) -c $(CFLAGS) $(HEADERS) -o $@ $< 
< clean:
< 	@echo "$(BLUE)Cleaning minishell$(RESET)"
< 	@rm -rf obj/
< 	@rm -rf obj_buitin/
< 	@$(MAKE) -C $(LIBFT) clean
< fclean: clean
< 	@rm -rf $(NAME)
< 	@rm -rf $(NAME_BONUS)
< 	@$(MAKE) -C $(LIBFT) fclean
< debug: CFLAGS = -Wall -Wextra
< debug: all
< re: fclean all
< .PHONY:	all bonus clean fclean re libft debug
< Exit code: 0
---
> Exit code: 1
